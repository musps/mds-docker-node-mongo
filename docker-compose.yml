version: '3.1'

volumes:
  mongo1_persistent:
  mongo2_persistent:
  mongo3_persistent:

networks:
  mongo-cluster:

services:
  app:
    container_name: app
    build:
      context: ./docker/app
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongo-cluster
    volumes:
      - ./docker/app:/docker/app
    healthcheck:
      test: bash -c "/docker/app/wait-for-mongodb.sh"
      interval: 10s
      timeout: 2s
      retries: 10

  mongo1:
    container_name: mongo1
    image: mongo
    volumes:
    ports:
      - 30001:30001
    volumes:
      - mongo1_persistent:/data/db
      - ./docker/mongodb:/docker/mongodb
    entrypoint: bash -c "/docker/mongodb/entrypoint.sh"
    networks:
      - mongo-cluster

  mongo2:
    container_name: mongo2
    image: mongo
    command: "mongod --port 30002 --replSet my-mongo-set --bind_ip_all"
    ports:
      - 30002:30002
    volumes:
      - mongo2_persistent:/data/db
    networks:
      - mongo-cluster

  mongo3:
    container_name: mongo3
    image: mongo
    command: "mongod --port 30003 --replSet my-mongo-set --bind_ip_all"
    ports:
      - 30003:30003
    volumes:
      - mongo3_persistent:/data/db
    networks:
      - mongo-cluster
